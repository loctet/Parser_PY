
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACCEPTEDCHAR AND ASSIGNATION ATOM COLON DOT EXISTS FALSE FORALL FREEZE ID IN INTEGER NOT OR PARTICIPANT REL_OP SEMICOLON STRING TRUE VTYPEstatements : statement\n                    | statements statementstatement : declaration\n                    | assertion\n                    | assignation\n                    | SEMICOLON statementassertion : ATOM\n                    | TRUE\n                    | FALSE\n                    | expression REL_OP expression\n                    | NOT assertion\n                    | assertion AND assertion\n                    | assertion OR assertion\n                    | existential\n                    | forall\n                    | freeze\n                    expression : fixedvalues\n                        | variablename\n                        | expression REL_OP expression\n                        | PARTICIPANT DOT ATOM\n                        variablename : ATOMfixedvalues : TRUE\n                        | FALSE\n                        | INTEGER\n                        | STRING\n                        declaration :  VTYPE ATOM\n                    | VTYPE ATOM ASSIGNATION ATOM\n                    | VTYPE ATOM ASSIGNATION TRUE\n                    | VTYPE ATOM ASSIGNATION FALSE\n                    | VTYPE ATOM ASSIGNATION INTEGER\n                    | VTYPE ATOM ASSIGNATION STRING\n                    | VTYPE ATOM COLON ATOM\n        assignation : ATOM ASSIGNATION ATOM\n                    | ATOM ASSIGNATION TRUE\n                    | ATOM ASSIGNATION FALSE\n                    | ATOM ASSIGNATION INTEGER\n                    | ATOM ASSIGNATION STRING\n        existential : EXISTS ATOM ATOM\n                       | EXISTS ATOM ATOM DOT ATOMforall : FORALL ATOM ATOMfreeze : FREEZE ATOM ATOM'
    
_lr_action_items = {'SEMICOLON':([0,1,2,3,4,5,6,8,9,10,11,12,15,16,17,18,19,24,27,28,31,32,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,],[6,6,-1,-3,-4,-5,6,-7,-8,-9,-24,-25,-14,-15,-16,-17,-18,-2,-6,-26,-11,-7,-12,-13,-33,-34,-35,-36,-37,-10,-21,-22,-23,-20,-38,-40,-41,-27,-28,-29,-30,-31,-32,-19,-39,]),'VTYPE':([0,1,2,3,4,5,6,8,9,10,11,12,15,16,17,18,19,24,27,28,31,32,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,],[7,7,-1,-3,-4,-5,7,-7,-8,-9,-24,-25,-14,-15,-16,-17,-18,-2,-6,-26,-11,-7,-12,-13,-33,-34,-35,-36,-37,-10,-21,-22,-23,-20,-38,-40,-41,-27,-28,-29,-30,-31,-32,-19,-39,]),'ATOM':([0,1,2,3,4,5,6,7,8,9,10,11,12,14,15,16,17,18,19,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,],[8,8,-1,-3,-4,-5,8,28,-7,-8,-9,-24,-25,32,-14,-15,-16,-17,-18,34,35,36,-2,32,32,-6,-26,41,47,-11,-7,50,51,52,53,-12,-13,54,59,-33,-34,-35,-36,-37,-10,-21,-22,-23,-20,-38,-40,-41,-27,-28,-29,-30,-31,-32,47,63,-19,-39,]),'TRUE':([0,1,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,24,25,26,27,28,29,30,31,32,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,],[9,9,-1,-3,-4,-5,9,-7,-8,-9,-24,-25,9,-14,-15,-16,-17,-18,-2,9,9,-6,-26,42,48,-11,-7,-12,-13,55,-33,-34,-35,-36,-37,-10,-21,-22,-23,-20,-38,-40,-41,-27,-28,-29,-30,-31,-32,48,-19,-39,]),'FALSE':([0,1,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,24,25,26,27,28,29,30,31,32,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,],[10,10,-1,-3,-4,-5,10,-7,-8,-9,-24,-25,10,-14,-15,-16,-17,-18,-2,10,10,-6,-26,43,49,-11,-7,-12,-13,56,-33,-34,-35,-36,-37,-10,-21,-22,-23,-20,-38,-40,-41,-27,-28,-29,-30,-31,-32,49,-19,-39,]),'NOT':([0,1,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,24,25,26,27,28,31,32,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,],[14,14,-1,-3,-4,-5,14,-7,-8,-9,-24,-25,14,-14,-15,-16,-17,-18,-2,14,14,-6,-26,-11,-7,-12,-13,-33,-34,-35,-36,-37,-10,-21,-22,-23,-20,-38,-40,-41,-27,-28,-29,-30,-31,-32,-19,-39,]),'PARTICIPANT':([0,1,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,24,25,26,27,28,30,31,32,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,],[20,20,-1,-3,-4,-5,20,-7,-8,-9,-24,-25,20,-14,-15,-16,-17,-18,-2,20,20,-6,-26,20,-11,-7,-12,-13,-33,-34,-35,-36,-37,-10,-21,-22,-23,-20,-38,-40,-41,-27,-28,-29,-30,-31,-32,20,-19,-39,]),'EXISTS':([0,1,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,24,25,26,27,28,31,32,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,],[21,21,-1,-3,-4,-5,21,-7,-8,-9,-24,-25,21,-14,-15,-16,-17,-18,-2,21,21,-6,-26,-11,-7,-12,-13,-33,-34,-35,-36,-37,-10,-21,-22,-23,-20,-38,-40,-41,-27,-28,-29,-30,-31,-32,-19,-39,]),'FORALL':([0,1,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,24,25,26,27,28,31,32,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,],[22,22,-1,-3,-4,-5,22,-7,-8,-9,-24,-25,22,-14,-15,-16,-17,-18,-2,22,22,-6,-26,-11,-7,-12,-13,-33,-34,-35,-36,-37,-10,-21,-22,-23,-20,-38,-40,-41,-27,-28,-29,-30,-31,-32,-19,-39,]),'FREEZE':([0,1,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,24,25,26,27,28,31,32,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,],[23,23,-1,-3,-4,-5,23,-7,-8,-9,-24,-25,23,-14,-15,-16,-17,-18,-2,23,23,-6,-26,-11,-7,-12,-13,-33,-34,-35,-36,-37,-10,-21,-22,-23,-20,-38,-40,-41,-27,-28,-29,-30,-31,-32,-19,-39,]),'INTEGER':([0,1,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,24,25,26,27,28,29,30,31,32,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,],[11,11,-1,-3,-4,-5,11,-7,-8,-9,-24,-25,11,-14,-15,-16,-17,-18,-2,11,11,-6,-26,44,11,-11,-7,-12,-13,57,-33,-34,-35,-36,-37,-10,-21,-22,-23,-20,-38,-40,-41,-27,-28,-29,-30,-31,-32,11,-19,-39,]),'STRING':([0,1,2,3,4,5,6,8,9,10,11,12,14,15,16,17,18,19,24,25,26,27,28,29,30,31,32,37,38,39,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,62,63,],[12,12,-1,-3,-4,-5,12,-7,-8,-9,-24,-25,12,-14,-15,-16,-17,-18,-2,12,12,-6,-26,45,12,-11,-7,-12,-13,58,-33,-34,-35,-36,-37,-10,-21,-22,-23,-20,-38,-40,-41,-27,-28,-29,-30,-31,-32,12,-19,-39,]),'$end':([1,2,3,4,5,8,9,10,11,12,15,16,17,18,19,24,27,28,31,32,37,38,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,62,63,],[0,-1,-3,-4,-5,-7,-8,-9,-24,-25,-14,-15,-16,-17,-18,-2,-6,-26,-11,-7,-12,-13,-33,-34,-35,-36,-37,-10,-21,-22,-23,-20,-38,-40,-41,-27,-28,-29,-30,-31,-32,-19,-39,]),'AND':([4,8,9,10,11,12,15,16,17,18,19,31,32,37,38,46,47,48,49,50,51,52,53,62,63,],[25,-7,-8,-9,-24,-25,-14,-15,-16,-17,-18,25,-7,25,25,-10,-21,-22,-23,-20,-38,-40,-41,-19,-39,]),'OR':([4,8,9,10,11,12,15,16,17,18,19,31,32,37,38,46,47,48,49,50,51,52,53,62,63,],[26,-7,-8,-9,-24,-25,-14,-15,-16,-17,-18,26,-7,26,26,-10,-21,-22,-23,-20,-38,-40,-41,-19,-39,]),'ASSIGNATION':([8,28,],[29,39,]),'REL_OP':([8,9,10,11,12,13,18,19,32,46,47,48,49,50,62,],[-21,-22,-23,-24,-25,30,-17,-18,-21,60,-21,-22,-23,-20,60,]),'DOT':([20,51,],[33,61,]),'COLON':([28,],[40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,],[1,]),'statement':([0,1,6,],[2,24,27,]),'declaration':([0,1,6,],[3,3,3,]),'assertion':([0,1,6,14,25,26,],[4,4,4,31,37,38,]),'assignation':([0,1,6,],[5,5,5,]),'expression':([0,1,6,14,25,26,30,60,],[13,13,13,13,13,13,46,62,]),'existential':([0,1,6,14,25,26,],[15,15,15,15,15,15,]),'forall':([0,1,6,14,25,26,],[16,16,16,16,16,16,]),'freeze':([0,1,6,14,25,26,],[17,17,17,17,17,17,]),'fixedvalues':([0,1,6,14,25,26,30,60,],[18,18,18,18,18,18,18,18,]),'variablename':([0,1,6,14,25,26,30,60,],[19,19,19,19,19,19,19,19,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement','statements',1,'p_statements','Parser.py',54),
  ('statements -> statements statement','statements',2,'p_statements','Parser.py',55),
  ('statement -> declaration','statement',1,'p_statement','Parser.py',58),
  ('statement -> assertion','statement',1,'p_statement','Parser.py',59),
  ('statement -> assignation','statement',1,'p_statement','Parser.py',60),
  ('statement -> SEMICOLON statement','statement',2,'p_statement','Parser.py',61),
  ('assertion -> ATOM','assertion',1,'p_assertion','Parser.py',64),
  ('assertion -> TRUE','assertion',1,'p_assertion','Parser.py',65),
  ('assertion -> FALSE','assertion',1,'p_assertion','Parser.py',66),
  ('assertion -> expression REL_OP expression','assertion',3,'p_assertion','Parser.py',67),
  ('assertion -> NOT assertion','assertion',2,'p_assertion','Parser.py',68),
  ('assertion -> assertion AND assertion','assertion',3,'p_assertion','Parser.py',69),
  ('assertion -> assertion OR assertion','assertion',3,'p_assertion','Parser.py',70),
  ('assertion -> existential','assertion',1,'p_assertion','Parser.py',71),
  ('assertion -> forall','assertion',1,'p_assertion','Parser.py',72),
  ('assertion -> freeze','assertion',1,'p_assertion','Parser.py',73),
  ('expression -> fixedvalues','expression',1,'p_expression','Parser.py',78),
  ('expression -> variablename','expression',1,'p_expression','Parser.py',79),
  ('expression -> expression REL_OP expression','expression',3,'p_expression','Parser.py',80),
  ('expression -> PARTICIPANT DOT ATOM','expression',3,'p_expression','Parser.py',81),
  ('variablename -> ATOM','variablename',1,'p_variablename','Parser.py',86),
  ('fixedvalues -> TRUE','fixedvalues',1,'p_fixedvalues','Parser.py',91),
  ('fixedvalues -> FALSE','fixedvalues',1,'p_fixedvalues','Parser.py',92),
  ('fixedvalues -> INTEGER','fixedvalues',1,'p_fixedvalues','Parser.py',93),
  ('fixedvalues -> STRING','fixedvalues',1,'p_fixedvalues','Parser.py',94),
  ('declaration -> VTYPE ATOM','declaration',2,'p_declaration','Parser.py',99),
  ('declaration -> VTYPE ATOM ASSIGNATION ATOM','declaration',4,'p_declaration','Parser.py',100),
  ('declaration -> VTYPE ATOM ASSIGNATION TRUE','declaration',4,'p_declaration','Parser.py',101),
  ('declaration -> VTYPE ATOM ASSIGNATION FALSE','declaration',4,'p_declaration','Parser.py',102),
  ('declaration -> VTYPE ATOM ASSIGNATION INTEGER','declaration',4,'p_declaration','Parser.py',103),
  ('declaration -> VTYPE ATOM ASSIGNATION STRING','declaration',4,'p_declaration','Parser.py',104),
  ('declaration -> VTYPE ATOM COLON ATOM','declaration',4,'p_declaration','Parser.py',105),
  ('assignation -> ATOM ASSIGNATION ATOM','assignation',3,'p_assignation','Parser.py',111),
  ('assignation -> ATOM ASSIGNATION TRUE','assignation',3,'p_assignation','Parser.py',112),
  ('assignation -> ATOM ASSIGNATION FALSE','assignation',3,'p_assignation','Parser.py',113),
  ('assignation -> ATOM ASSIGNATION INTEGER','assignation',3,'p_assignation','Parser.py',114),
  ('assignation -> ATOM ASSIGNATION STRING','assignation',3,'p_assignation','Parser.py',115),
  ('existential -> EXISTS ATOM ATOM','existential',3,'p_existential','Parser.py',122),
  ('existential -> EXISTS ATOM ATOM DOT ATOM','existential',5,'p_existential','Parser.py',123),
  ('forall -> FORALL ATOM ATOM','forall',3,'p_forall','Parser.py',133),
  ('freeze -> FREEZE ATOM ATOM','freeze',3,'p_freeze','Parser.py',138),
]
