
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ACCEPTEDCHAR AND ASSIGNATION ATOM COLON DOT EXISTS FALSE FORALL FREEZE ID IN INTEGER LPAR NOT OPERATOR OR PARTICIPANT REL_OP RPAR SEMICOLON STRING TRUE VTYPEstatements : statement\n                    | statements statementstatement : declaration\n                    | assertion\n                    | assignation\n                    | SEMICOLON statementassertion : ATOM\n                    | TRUE\n                    | FALSE\n                    | rel_op_assertion\n                    | NOT assertion\n                    | and_op_assertion\n                    | or_op_assertion\n                    | checkin\n                    | existential\n                    | forall\n                    | freeze\n                    | LPAR assertion RPAR\n                    rel_op_assertion : expression REL_OP expressionand_op_assertion : assertion AND assertionor_op_assertion : assertion OR assertionexpression : fixedvalues\n                        | variablename\n                        | expression REL_OP expression\n                        | expression OPERATOR expression\n                        | PARTICIPANT DOT ATOM\n                        variablename : ATOMfixedvalues : TRUE\n                        | FALSE\n                        | INTEGER\n                        | STRING\n                        declaration :  VTYPE ATOM\n                    | VTYPE ATOM ASSIGNATION ATOM\n                    | VTYPE ATOM ASSIGNATION TRUE\n                    | VTYPE ATOM ASSIGNATION FALSE\n                    | VTYPE ATOM ASSIGNATION INTEGER\n                    | VTYPE ATOM ASSIGNATION STRING\n                    | VTYPE ATOM COLON ATOM\n        assignation : ATOM ASSIGNATION ATOM\n                    | ATOM ASSIGNATION TRUE\n                    | ATOM ASSIGNATION FALSE\n                    | ATOM ASSIGNATION INTEGER\n                    | ATOM ASSIGNATION STRING\n        checkin : ATOM IN ATOMexistential : EXISTS ATOM ATOM\n                       | EXISTS ATOM ATOM DOT LPAR assertion RPARforall : FORALL ATOM ATOM\n                  | FORALL ATOM ATOM DOT LPAR assertion RPARfreeze : FREEZE ATOM ATOM'
    
_lr_action_items = {'SEMICOLON':([0,1,2,3,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,26,27,29,32,33,36,37,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,79,80,],[6,6,-1,-3,-4,-5,6,-7,-8,-9,-30,-31,-10,-12,-13,-14,-15,-16,-17,-22,-23,-2,-6,-32,-11,-7,-20,-21,-39,-40,-41,-42,-43,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-33,-34,-35,-36,-37,-38,-24,-46,-48,]),'VTYPE':([0,1,2,3,4,5,6,8,9,10,11,12,13,15,16,17,18,19,20,26,27,29,32,33,36,37,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,79,80,],[7,7,-1,-3,-4,-5,7,-7,-8,-9,-30,-31,-10,-12,-13,-14,-15,-16,-17,-22,-23,-2,-6,-32,-11,-7,-20,-21,-39,-40,-41,-42,-43,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-33,-34,-35,-36,-37,-38,-24,-46,-48,]),'ATOM':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,23,24,25,26,27,29,30,31,32,33,34,35,36,37,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,79,80,],[8,8,-1,-3,-4,-5,8,33,-7,-8,-9,-30,-31,-10,37,-12,-13,-14,-15,-16,-17,37,41,42,43,-22,-23,-2,37,37,-6,-32,49,54,-11,-7,57,57,61,62,63,64,-20,-21,65,70,-39,-40,-41,-42,-43,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-33,-34,-35,-36,-37,-38,57,-24,37,37,-46,-48,]),'TRUE':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,29,30,31,32,33,34,36,37,39,40,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,79,80,],[9,9,-1,-3,-4,-5,9,-7,-8,-9,-30,-31,-10,9,-12,-13,-14,-15,-16,-17,9,-22,-23,-2,9,9,-6,-32,50,-11,-7,58,58,-20,-21,66,-39,-40,-41,-42,-43,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-33,-34,-35,-36,-37,-38,58,-24,9,9,-46,-48,]),'FALSE':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,29,30,31,32,33,34,36,37,39,40,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,79,80,],[10,10,-1,-3,-4,-5,10,-7,-8,-9,-30,-31,-10,10,-12,-13,-14,-15,-16,-17,10,-22,-23,-2,10,10,-6,-32,51,-11,-7,59,59,-20,-21,67,-39,-40,-41,-42,-43,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-33,-34,-35,-36,-37,-38,59,-24,10,10,-46,-48,]),'NOT':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,29,30,31,32,33,36,37,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,79,80,],[14,14,-1,-3,-4,-5,14,-7,-8,-9,-30,-31,-10,14,-12,-13,-14,-15,-16,-17,14,-22,-23,-2,14,14,-6,-32,-11,-7,-20,-21,-39,-40,-41,-42,-43,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-33,-34,-35,-36,-37,-38,-24,14,14,-46,-48,]),'LPAR':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,29,30,31,32,33,36,37,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,72,73,74,75,76,79,80,],[21,21,-1,-3,-4,-5,21,-7,-8,-9,-30,-31,-10,21,-12,-13,-14,-15,-16,-17,21,-22,-23,-2,21,21,-6,-32,-11,-7,-20,-21,-39,-40,-41,-42,-43,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-33,-34,-35,-36,-37,-38,75,76,-24,21,21,-46,-48,]),'EXISTS':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,29,30,31,32,33,36,37,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,79,80,],[23,23,-1,-3,-4,-5,23,-7,-8,-9,-30,-31,-10,23,-12,-13,-14,-15,-16,-17,23,-22,-23,-2,23,23,-6,-32,-11,-7,-20,-21,-39,-40,-41,-42,-43,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-33,-34,-35,-36,-37,-38,-24,23,23,-46,-48,]),'FORALL':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,29,30,31,32,33,36,37,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,79,80,],[24,24,-1,-3,-4,-5,24,-7,-8,-9,-30,-31,-10,24,-12,-13,-14,-15,-16,-17,24,-22,-23,-2,24,24,-6,-32,-11,-7,-20,-21,-39,-40,-41,-42,-43,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-33,-34,-35,-36,-37,-38,-24,24,24,-46,-48,]),'FREEZE':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,29,30,31,32,33,36,37,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,75,76,79,80,],[25,25,-1,-3,-4,-5,25,-7,-8,-9,-30,-31,-10,25,-12,-13,-14,-15,-16,-17,25,-22,-23,-2,25,25,-6,-32,-11,-7,-20,-21,-39,-40,-41,-42,-43,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-33,-34,-35,-36,-37,-38,-24,25,25,-46,-48,]),'PARTICIPANT':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,29,30,31,32,33,36,37,39,40,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,79,80,],[28,28,-1,-3,-4,-5,28,-7,-8,-9,-30,-31,-10,28,-12,-13,-14,-15,-16,-17,28,-22,-23,-2,28,28,-6,-32,-11,-7,28,28,-20,-21,-39,-40,-41,-42,-43,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-33,-34,-35,-36,-37,-38,28,-24,28,28,-46,-48,]),'INTEGER':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,29,30,31,32,33,34,36,37,39,40,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,79,80,],[11,11,-1,-3,-4,-5,11,-7,-8,-9,-30,-31,-10,11,-12,-13,-14,-15,-16,-17,11,-22,-23,-2,11,11,-6,-32,52,-11,-7,11,11,-20,-21,68,-39,-40,-41,-42,-43,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-33,-34,-35,-36,-37,-38,11,-24,11,11,-46,-48,]),'STRING':([0,1,2,3,4,5,6,8,9,10,11,12,13,14,15,16,17,18,19,20,21,26,27,29,30,31,32,33,34,36,37,39,40,45,46,47,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,74,75,76,79,80,],[12,12,-1,-3,-4,-5,12,-7,-8,-9,-30,-31,-10,12,-12,-13,-14,-15,-16,-17,12,-22,-23,-2,12,12,-6,-32,53,-11,-7,12,12,-20,-21,69,-39,-40,-41,-42,-43,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-33,-34,-35,-36,-37,-38,12,-24,12,12,-46,-48,]),'$end':([1,2,3,4,5,8,9,10,11,12,13,15,16,17,18,19,20,26,27,29,32,33,36,37,45,46,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,74,79,80,],[0,-1,-3,-4,-5,-7,-8,-9,-30,-31,-10,-12,-13,-14,-15,-16,-17,-22,-23,-2,-6,-32,-11,-7,-20,-21,-39,-40,-41,-42,-43,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-33,-34,-35,-36,-37,-38,-24,-46,-48,]),'AND':([4,8,9,10,11,12,13,15,16,17,18,19,20,26,27,36,37,38,45,46,54,55,56,57,58,59,60,61,62,63,64,74,77,78,79,80,],[30,-7,-8,-9,-30,-31,-10,-12,-13,-14,-15,-16,-17,-22,-23,30,-7,30,30,30,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-24,30,30,-46,-48,]),'OR':([4,8,9,10,11,12,13,15,16,17,18,19,20,26,27,36,37,38,45,46,54,55,56,57,58,59,60,61,62,63,64,74,77,78,79,80,],[31,-7,-8,-9,-30,-31,-10,-12,-13,-14,-15,-16,-17,-22,-23,31,-7,31,31,31,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-24,31,31,-46,-48,]),'ASSIGNATION':([8,33,],[34,47,]),'IN':([8,37,],[35,35,]),'REL_OP':([8,9,10,11,12,22,26,27,37,56,57,58,59,60,64,74,],[-27,-28,-29,-30,-31,39,-22,-23,-27,71,-27,-28,-29,71,-26,71,]),'OPERATOR':([8,9,10,11,12,22,26,27,37,56,57,58,59,60,64,74,],[-27,-28,-29,-30,-31,40,-22,-23,-27,40,-27,-28,-29,40,-26,40,]),'RPAR':([9,10,11,12,13,15,16,17,18,19,20,26,27,36,37,38,45,46,54,55,56,57,58,59,60,61,62,63,64,74,77,78,79,80,],[-8,-9,-30,-31,-10,-12,-13,-14,-15,-16,-17,-22,-23,-11,-7,55,-20,-21,-44,-18,-19,-27,-28,-29,-25,-45,-47,-49,-26,-24,79,80,-46,-48,]),'DOT':([28,61,62,],[44,72,73,]),'COLON':([33,],[48,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statements':([0,],[1,]),'statement':([0,1,6,],[2,29,32,]),'declaration':([0,1,6,],[3,3,3,]),'assertion':([0,1,6,14,21,30,31,75,76,],[4,4,4,36,38,45,46,77,78,]),'assignation':([0,1,6,],[5,5,5,]),'rel_op_assertion':([0,1,6,14,21,30,31,75,76,],[13,13,13,13,13,13,13,13,13,]),'and_op_assertion':([0,1,6,14,21,30,31,75,76,],[15,15,15,15,15,15,15,15,15,]),'or_op_assertion':([0,1,6,14,21,30,31,75,76,],[16,16,16,16,16,16,16,16,16,]),'checkin':([0,1,6,14,21,30,31,75,76,],[17,17,17,17,17,17,17,17,17,]),'existential':([0,1,6,14,21,30,31,75,76,],[18,18,18,18,18,18,18,18,18,]),'forall':([0,1,6,14,21,30,31,75,76,],[19,19,19,19,19,19,19,19,19,]),'freeze':([0,1,6,14,21,30,31,75,76,],[20,20,20,20,20,20,20,20,20,]),'expression':([0,1,6,14,21,30,31,39,40,71,75,76,],[22,22,22,22,22,22,22,56,60,74,22,22,]),'fixedvalues':([0,1,6,14,21,30,31,39,40,71,75,76,],[26,26,26,26,26,26,26,26,26,26,26,26,]),'variablename':([0,1,6,14,21,30,31,39,40,71,75,76,],[27,27,27,27,27,27,27,27,27,27,27,27,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statements","S'",1,None,None,None),
  ('statements -> statement','statements',1,'p_statements','Parser.py',22),
  ('statements -> statements statement','statements',2,'p_statements','Parser.py',23),
  ('statement -> declaration','statement',1,'p_statement','Parser.py',26),
  ('statement -> assertion','statement',1,'p_statement','Parser.py',27),
  ('statement -> assignation','statement',1,'p_statement','Parser.py',28),
  ('statement -> SEMICOLON statement','statement',2,'p_statement','Parser.py',29),
  ('assertion -> ATOM','assertion',1,'p_assertion','Parser.py',32),
  ('assertion -> TRUE','assertion',1,'p_assertion','Parser.py',33),
  ('assertion -> FALSE','assertion',1,'p_assertion','Parser.py',34),
  ('assertion -> rel_op_assertion','assertion',1,'p_assertion','Parser.py',35),
  ('assertion -> NOT assertion','assertion',2,'p_assertion','Parser.py',36),
  ('assertion -> and_op_assertion','assertion',1,'p_assertion','Parser.py',37),
  ('assertion -> or_op_assertion','assertion',1,'p_assertion','Parser.py',38),
  ('assertion -> checkin','assertion',1,'p_assertion','Parser.py',39),
  ('assertion -> existential','assertion',1,'p_assertion','Parser.py',40),
  ('assertion -> forall','assertion',1,'p_assertion','Parser.py',41),
  ('assertion -> freeze','assertion',1,'p_assertion','Parser.py',42),
  ('assertion -> LPAR assertion RPAR','assertion',3,'p_assertion','Parser.py',43),
  ('rel_op_assertion -> expression REL_OP expression','rel_op_assertion',3,'p_rel_op_assertion','Parser.py',49),
  ('and_op_assertion -> assertion AND assertion','and_op_assertion',3,'p_and_op_assertion','Parser.py',55),
  ('or_op_assertion -> assertion OR assertion','or_op_assertion',3,'p_or_op_assertion','Parser.py',61),
  ('expression -> fixedvalues','expression',1,'p_expression','Parser.py',66),
  ('expression -> variablename','expression',1,'p_expression','Parser.py',67),
  ('expression -> expression REL_OP expression','expression',3,'p_expression','Parser.py',68),
  ('expression -> expression OPERATOR expression','expression',3,'p_expression','Parser.py',69),
  ('expression -> PARTICIPANT DOT ATOM','expression',3,'p_expression','Parser.py',70),
  ('variablename -> ATOM','variablename',1,'p_variablename','Parser.py',75),
  ('fixedvalues -> TRUE','fixedvalues',1,'p_fixedvalues','Parser.py',81),
  ('fixedvalues -> FALSE','fixedvalues',1,'p_fixedvalues','Parser.py',82),
  ('fixedvalues -> INTEGER','fixedvalues',1,'p_fixedvalues','Parser.py',83),
  ('fixedvalues -> STRING','fixedvalues',1,'p_fixedvalues','Parser.py',84),
  ('declaration -> VTYPE ATOM','declaration',2,'p_declaration','Parser.py',89),
  ('declaration -> VTYPE ATOM ASSIGNATION ATOM','declaration',4,'p_declaration','Parser.py',90),
  ('declaration -> VTYPE ATOM ASSIGNATION TRUE','declaration',4,'p_declaration','Parser.py',91),
  ('declaration -> VTYPE ATOM ASSIGNATION FALSE','declaration',4,'p_declaration','Parser.py',92),
  ('declaration -> VTYPE ATOM ASSIGNATION INTEGER','declaration',4,'p_declaration','Parser.py',93),
  ('declaration -> VTYPE ATOM ASSIGNATION STRING','declaration',4,'p_declaration','Parser.py',94),
  ('declaration -> VTYPE ATOM COLON ATOM','declaration',4,'p_declaration','Parser.py',95),
  ('assignation -> ATOM ASSIGNATION ATOM','assignation',3,'p_assignation','Parser.py',101),
  ('assignation -> ATOM ASSIGNATION TRUE','assignation',3,'p_assignation','Parser.py',102),
  ('assignation -> ATOM ASSIGNATION FALSE','assignation',3,'p_assignation','Parser.py',103),
  ('assignation -> ATOM ASSIGNATION INTEGER','assignation',3,'p_assignation','Parser.py',104),
  ('assignation -> ATOM ASSIGNATION STRING','assignation',3,'p_assignation','Parser.py',105),
  ('checkin -> ATOM IN ATOM','checkin',3,'p_checkin','Parser.py',111),
  ('existential -> EXISTS ATOM ATOM','existential',3,'p_existential','Parser.py',116),
  ('existential -> EXISTS ATOM ATOM DOT LPAR assertion RPAR','existential',7,'p_existential','Parser.py',117),
  ('forall -> FORALL ATOM ATOM','forall',3,'p_forall','Parser.py',123),
  ('forall -> FORALL ATOM ATOM DOT LPAR assertion RPAR','forall',7,'p_forall','Parser.py',124),
  ('freeze -> FREEZE ATOM ATOM','freeze',3,'p_freeze','Parser.py',130),
]
